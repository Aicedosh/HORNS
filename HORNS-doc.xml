<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HORNS</name>
    </assembly>
    <members>
        <member name="T:HORNS.Action">
            <summary>
            Klasa bazowa dla akcji możliwych do wykonania przez agenta. Klasy bazowe muszą implementować metodę Perform.
            </summary>
        </member>
        <member name="P:HORNS.Action.CachedCost">
            <summary>
            Ostatni obliczony koszt danej akcji.
            </summary>
        </member>
        <member name="M:HORNS.Action.AddResult``4(HORNS.Variable{``0,``1,``2,``3},``1)">
            <summary>
            Dodaje rezultat do zbioru rezultatów akcji.
            </summary>
            <typeparam name="T">Typ danych przechowywanych w zmiennej \texttt{variable}.</typeparam>
            <typeparam name="RT">Typ dodawanego rezultatu.</typeparam>
            <typeparam name="ST">Typ solvera skojarzony z daną zmienną.</typeparam>
            <typeparam name="PT">Typ wymagania skojarzony z daną zmienną.</typeparam>
            <param name="variable">Zmienna, której dotyczy rezultat.</param>
            <param name="result">Nowy rezultat akcji.</param>
        </member>
        <member name="M:HORNS.Action.AddPrecondition``4(HORNS.Variable{``0,``1,``2,``3},``3)">
            <summary>
            Dodaje wymaganie do zbioru wymagań akcji.
            </summary>
            <typeparam name="T">Typ danych przechowywanych w zmiennej \texttt{variable}.</typeparam>
            <typeparam name="RT">Typ rezultatu skojarzony z daną zmienną.</typeparam>
            <typeparam name="ST">Typ solvera skojarzony z daną zmienną.</typeparam>
            <typeparam name="PT">Typ dodawanego wymagania.</typeparam>
            <param name="variable">Zmienna, której dotyczy wymaganie.</param>
            <param name="precondition">Nowe wymaganie akcji.</param>
        </member>
        <member name="M:HORNS.Action.AddCost``1(HORNS.Variable{``0},System.Func{``0,System.Single})">
            <summary>
            Dodaje koszt zależny od wartości zmiennej do kosztu akcji.
            </summary>
            <typeparam name="T">Typ danych przechowywanych w zmiennej \texttt{variable}.</typeparam>
            <param name="variable">Zmienna, od której zależy koszt.</param>
            <param name="evaluationFunction">Funkcja wyznaczająca koszt dla danej wartości zmiennej.</param>
        </member>
        <member name="M:HORNS.Action.AddCost(System.Single)">
            <summary>
            Dodaje stały koszt do kosztu akcji.
            </summary>
            <param name="cost">Wartość kosztu.</param>
        </member>
        <member name="M:HORNS.Action.Perform">
            <summary>
            Wykonuje dowolne operacje związane z realizacją akcji.
            </summary>
        </member>
        <member name="M:HORNS.Action.Apply">
            <summary>
            Wykonuje wszystkie rezultaty związane z akcją.
            </summary>
        </member>
        <member name="T:HORNS.Precondition">
            <summary>
            Abstrakcyjna klasa bazowa dla wszystkich wymagań.
            </summary>
        </member>
        <member name="M:HORNS.Precondition.Clone">
            <summary>
            Wykonuje kopię obiektu wymagania.
            </summary>
            <returns>Kopia wymagania.</returns>
        </member>
        <member name="M:HORNS.Precondition.IsEqualOrWorse(HORNS.Precondition)">
            <summary>
            Porównuje wymaganie z innym wymaganiem.
            </summary>
            <param name="precondition">Wymaganie do porównania.</param>
            <returns>\texttt{true}, jeżeli \texttt{other} jest w takim samym lub gorszym stanie; \texttt{false} w przeciwnym wypadku.</returns>
        </member>
        <member name="M:HORNS.Precondition.GetActions(HORNS.Agent)">
            <summary>
            Wyznacza akcje mogące spełnić wymaganie.
            </summary>
            <param name="agent">Agent, którego akcje będą rozważane.</param>
            <returns>Kolekcja akcji.</returns>
        </member>
        <member name="M:HORNS.Precondition.Subtract(HORNS.ActionResult)">
            <summary>
            Odejmuje rezultat akcji od wymagania.
            </summary>
            <param name="actionResult">Rezultat do odjęcia.</param>
            <returns>Nowe wymaganie będące wynikiem odjęcia rezultatu.</returns>
        </member>
        <member name="M:HORNS.Precondition.Combine(HORNS.Precondition)">
            <summary>
            Łączy wymaganie z innym wymaganiem.
            </summary>
            <param name="precondition">Wymaganie do połączenia.</param>
            <returns>Nowe wymaganie będące wynikiem połączenia.</returns>
        </member>
        <member name="T:HORNS.Precondition`1">
            <summary>
            Abstrakcyjna klasa bazowa dla wymagań dla zmiennych typu T.
            </summary>
            <typeparam name="T">Typ danych przechowywanych w zmiennej związanej z wymaganiem.</typeparam>
        </member>
        <member name="P:HORNS.Precondition`1.Variable">
            <summary>
            Zmienna związana z wymaganiem.
            </summary>
        </member>
        <member name="P:HORNS.Precondition`1.Value">
            <summary>
            Wartość docelowa wymagania.
            </summary>
        </member>
        <member name="M:HORNS.Precondition`1.#ctor(`0)">
            <summary>
            Tworzy nowe wymaganie o określonej wartości docelowej.
            </summary>
            <param name="value">Wartość docelowa wymagania.</param>
        </member>
        <member name="M:HORNS.Precondition`1.#ctor(HORNS.Precondition{`0})">
            <summary>
            Tworzy nowe wymaganie bedące kopią innego wymagania.
            </summary>
            <param name="precondition">Wymaganie do skopiowania.</param>
        </member>
        <member name="M:HORNS.Precondition`1.IsFulfilled(`0)">
            <summary>
            Sprawdza, czy dana wartość spełnia wymaganie.
            </summary>
            <param name="value">Wartość do sprawdzenia.</param>
            <returns>\texttt{true}, jeżeli wartość spełnia wymaganie.</returns>
        </member>
        <member name="M:HORNS.Precondition`1.IsZeroed(`0)">
            <summary>
            Sprawdza, czy wymaganie dążące do danej wartości można uznać za spełnione.
            </summary>
            <param name="value">Wartość do sprawdzenia.</param>
            <returns>\texttt{true}, jeżeli dla danej wartości docelowej wymaganie jest spełnione.</returns>
        </member>
        <member name="T:HORNS.Precondition`2">
            <summary>
            Abstrakcyjna klasa bazowa dla wymagań dla zmiennych typu T powiązanych z solverem typu ST.
            </summary>
            <typeparam name="T">Typ danych przechowywanych w zmiennej związanej z wymaganiem.</typeparam>
            <typeparam name="ST">Typ solvera związanego z wymaganiem.</typeparam>
        </member>
        <member name="M:HORNS.Precondition`2.#ctor(`0)">
            <summary>
            Tworzy nowe wymaganie o określonej wartości docelowej.
            </summary>
            <param name="value">Wartość docelowa wymagania.</param>
        </member>
        <member name="M:HORNS.Precondition`2.#ctor(`0,HORNS.Precondition{`0,`1})">
            <summary>
            Tworzy nowe wymaganie o określonej wartości docelowej i zmiennej pochodzącej z innego wymagania.
            </summary>
            <param name="value"></param>
            <param name="precondition"></param>
        </member>
        <member name="M:HORNS.Precondition`2.#ctor(HORNS.Precondition{`0,`1})">
            <summary>
            Tworzy nowe wymaganie bedące kopią innego wymagania.
            </summary>
            <param name="precondition">Wymaganie do skopiowania.</param>
        </member>
        <member name="M:HORNS.Precondition`2.GetActions(HORNS.Agent)">
            <summary>
            Wyznacza akcje mogące spełnić wymaganie.
            </summary>
            <param name="agent">Agent, którego akcje będą rozważane.</param>
            <returns>Kolekcja akcji.</returns>
        </member>
        <member name="T:HORNS.ActionResult">
            <summary>
            Abstrakcyjna klasa bazowa dla wszystkich rezultatów.
            </summary>
        </member>
        <member name="T:HORNS.ActionResult`2">
            <summary>
            Abstrakcyjna klasa bazowa dla rezultatów dla zmiennych typu T powiązanych z solverem typu ST.
            </summary>
            <typeparam name="T">Typ danych przechowywanych w zmiennej związanej z rezultatem.</typeparam>
            <typeparam name="ST">Typ solvera związanego z rezultatem.</typeparam>
        </member>
        <member name="T:HORNS.ActionResult`1">
            <summary>
            Abstrakcyjna klasa bazowa dla rezultatów dla zmiennych typu T.
            </summary>
            <typeparam name="T">Typ danych przechowywanych w zmiennej związanej z rezultatem.</typeparam>
        </member>
        <member name="P:HORNS.ActionResult`1.Variable">
            <summary>
            Zmienna związana z wymaganiem.
            </summary>
        </member>
        <member name="M:HORNS.ActionResult`1.GetResultValue(HORNS.Variable{`0})">
            <summary>
            Zwraca wartość końcową rezultatu dla wartości początkowej reprezentowanej daną zmienną.
            </summary>
            <param name="variable">Zmienna o wartości początkowej.</param>
            <returns>Wartość końcowa rezultatu.</returns>
        </member>
        <member name="T:HORNS.VariableSolver`1">
            <summary>
            Abstrakcyjna klasa bazowa dla solverów dla zmiennych typu T.
            </summary>
            <typeparam name="T">Typ danych przechowywanych w zmiennej związanej z solverem.</typeparam>
        </member>
        <member name="M:HORNS.VariableSolver`1.GetActionsTowards(HORNS.Variable{`0},`0,HORNS.Agent)">
            <summary>
            Wyznacza akcje modyfikujące daną zmienną w kierunku określonej wartości docelowej.
            </summary>
            <param name="variable">Zmienna.</param>
            <param name="desiredValue">Wartość docelowa.</param>
            <param name="agent">Agent, którego akcje będą rozważane.</param>
            <returns>Kolekcja akcji.</returns>
        </member>
        <member name="T:HORNS.VariableSolver`3">
            <summary>
            Abstrakcyjna klasa bazowa dla solverów dla zmiennych typu T powiązanych z rezultatem typu RT i wymaganiem typu PT.
            </summary>
            <typeparam name="T">Typ danych przechowywanych w zmiennej związanej z solverem.</typeparam>
            <typeparam name="RT">Typ rezultatu związany z solverem.</typeparam>
            <typeparam name="PT">Typ wymagania związany z solverem.</typeparam>
        </member>
        <member name="M:HORNS.VariableSolver`3.Register(`1)">
            <summary>
            Dodaje rezultat do rezultatów rozważanych przez solver.
            </summary>
            <param name="result">Rezultat.</param>
        </member>
        <member name="M:HORNS.VariableSolver`3.GetActionsTowards(HORNS.Variable{`0},`0)">
            <summary>
            Wyznacza akcje modyfikujące daną zmienną w kierunku określonej wartości docelowej.
            </summary>
            <param name="variable">Zmienna.</param>
            <param name="desiredValue">Wartość docelowa.</param>
            <returns>Kolekcja akcji.</returns>
        </member>
        <member name="M:HORNS.VariableSolver`3.GetActionsSatisfying(`2)">
            <summary>
            Wyznacza akcje mogące spełnić dane wymaganie.
            </summary>
            <param name="precondition">Wymaganie do spełnienia.</param>
            <returns>Kolekcja akcji.</returns>
        </member>
        <member name="M:HORNS.VariableSolver`3.GetActionsTowards(HORNS.Variable{`0},`0,HORNS.Agent)">
            <summary>
            Wyznacza akcje modyfikujące daną zmienną w kierunku określonej wartości docelowej.
            </summary>
            <param name="variable">Zmienna.</param>
            <param name="desiredValue">Wartość docelowa.</param>
            <param name="agent">Agent, którego akcje będą rozważane.</param>
            <returns>Kolekcja akcji.</returns>
        </member>
        <member name="T:HORNS.INeed">
            <summary>
            Interfejs dla wszystkich potrzeb.
            </summary>
        </member>
        <member name="M:HORNS.INeed.Evaluate">
            <summary>
            Oblicza ocenę obecnego stanu potrzeby.
            </summary>
            <returns>Ocena stanu potrzeby.</returns>
        </member>
        <member name="M:HORNS.INeed.IsSatisfied">
            <summary>
            Sprawdza, czy potrzeba jest w stanie zaspokojonym.
            </summary>
            <returns>\texttt{true}, jeżeli potrzeba jest zaspokojona.</returns>
        </member>
        <member name="T:HORNS.Need`1">
            <summary>
            Klasa reprezentująca potrzeby dotyczące zmiennych typu T.
            </summary>
            <typeparam name="T">Typ danych przechowywanych w zmiennej związanej z potrzebą.</typeparam>
        </member>
        <member name="P:HORNS.Need`1.Value">
            <summary>
            Wartość potrzeby.
            </summary>
        </member>
        <member name="P:HORNS.Need`1.Desired">
            <summary>
            Docelowa wartość potrzeby.
            </summary>
        </member>
        <member name="M:HORNS.Need`1.#ctor(HORNS.Variable{`0},`0,System.Func{`0,System.Single})">
            <summary>
            Tworzy nową instancję potrzeby powiązaną z określoną zmienną.
            </summary>
            <param name="variable">Zmienna, której dotyczy potrzeba.</param>
            <param name="desired">Docelowa wartość zmiennej.</param>
            <param name="evaluation">Funkcja wyznaczająca ocenę potrzeby dla konkretnej wartości zmiennej.</param>
        </member>
        <member name="M:HORNS.Need`1.Evaluate(`0)">
            <summary>
            Oblicza ocenę potrzeby dla danej wartości.
            </summary>
            <param name="value">Wartość do oceny.</param>
            <returns>Ocena dla danej wartości.</returns>
        </member>
        <member name="M:HORNS.Need`1.Evaluate">
            <summary>
            Oblicza ocenę obecnego stanu potrzeby.
            </summary>
            <returns>Ocena stanu potrzeby.</returns>
        </member>
        <member name="M:HORNS.Need`1.IsSatisfied">
            <summary>
            Sprawdza, czy potrzeba jest w stanie zaspokojonym.
            </summary>
            <returns>\texttt{true}, jeżeli potrzeba jest zaspokojona.</returns>
        </member>
        <member name="M:HORNS.Need`1.IsSatisfied(`0)">
            <summary>
            Sprawdza, czy dana wartość zaspokaja potrzebę.
            </summary>
            <param name="value">Wartość do sprawdzenia.</param>
            <returns>\texttt{true}, jeżeli wartość zaspokaja potrzebę.</returns>
        </member>
        <member name="T:HORNS.Variable">
            <summary>
            Klasa bazowa dla wszystkich zmiennych.
            </summary>
        </member>
    </members>
</doc>
